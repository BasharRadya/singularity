Feature 	Implementation	Status

email		pop3/smtp	done
md2html		radius		done
auth		radius		doing
dash		radius		todo
deploy		big.bang	todo
autograder	ata		todo

Orbit data needs to db tables mapping:

Users (
	id integer primary key,
	username string UNIQUE NOT NULL,
	pwdhash string NOT NULL,
	lfx boolean NOT NULL,
	student_id integer

tblnick (database table nickname) defs:
USR := student/mentee username 	(Orbit ID)
SES := session token 		(Orbit Session)
ASN := assignment for course	(EX/PX/FX)
SUB := unique asn submission	(homework)
REG := temp registration entry

tblnick	Purpose 	Access Ctrl
USR	usr => pwdhash	public-ish (rate limit)
SES	tok => usr/null	radius only
SUB	usr => [subs]	per-student
ASN	asn => course	public
REG	usr 1=> creds	once per-student

TODO when working:
- reconsider registration
- 


Secure data:
- email storage configured by big.bang imported from webservers dev
- tables in consolidated database, start with orbit.db as basic solution
(these can go in /var/orbit/<name> now I suppose)

random idea storage:
- big.bang could be passed a backup to restore state
- idemptent function mapping a root and backup

orbit
├── ata
│   ├── ata.conf
│   ├── ata.info
│   ├── ata.monitor
│   ├── ata.onsub
│   ├── ata.onsub.py
│   ├── ata.peers
│   ├── ata.peers.py
│   ├── ata.tbreak
│   └── ata.watchdog
├── backup
│   ├── do_local_backup.sh
│   ├── do_remote_backup.sh
│   ├── prod.hostname
│   ├── README.md
│   ├── restore_from_backup.sh
├── config.py
├── db.default
├── dnf.deps
├── ini.c
├── log.rad
├── multitool.sh
├── orbit.db
├── orbit.ini
├── pip.deps
├── pop3
│   ├── Makefile
│   └── pop3.c
├── radius.py
├── radius.service
├── radius.start
├── sessions.db
├── smtp
│   ├── Makefile
│   └── smtp.c
├── start.ini
├── TODO
└── wsgi.py

5 directories, 36 files
